#!/bin/bash
#
# generateBlockFiles
#
# For every distinct pair of feature files, A and B, in the data directory, this script
# generates a file of synteny blocks. The block files are written to the data directory.
# Each block file's name consists of the A and B file basenames, separated by a dash ("-"),
# with a ".tsv" extension. So for example, if A and B are "mus_musculus_akrj.gff3"
# and "mus_musculus_balbcj.gff3", respectively, the block file is named
# "mus_musculus_akrj-mus_musculus_balbcj.tsv".
#

source config.sh

outdir="${GDIR}"
mkdir -p ${outdir}

# get the list of feature files
declare -a arr=(`ls ${GDIR}/mus_*-features.tsv`)

# 
lim=$((${#arr[@]} - 1))

# nested for loop, 
#   for (i = 0; i < length of list; i++)
#       for (j = i+1; j < length of list; j++)
#           generate synteny blocks for file[i] and file[j]
ofn="blocks.tsv"
rm -f ${outdir}/${ofn}
touch ${outdir}/${ofn}
noheader=""
for i in `seq 0 ${lim}`; do
    a=${arr[$i]}
    afn=$(basename "${a}")
    afn="${afn%.*}"
    an="${afn%-features}"
    jstart=$(($i))
    if [ ${jstart} -le ${lim} ]; then
        for j in `seq ${jstart} ${lim}`; do
            # extract the B genome name
            b=${arr[$j]}
            bfn=$(basename "${b}")
            bfn="${bfn%.*}"
	    bn="${bfn%-features}"
            # here we go...
	    echo python sb.py ${noheader} --af ${a} --an ${an} --bf ${b} --bn ${bn} 
	    python sb.py ${noheader} --af ${a} --an ${an} --bf ${b} --bn ${bn} >> ${outdir}/${ofn}
	    # After the first time thru, stop generating header lines.
	    noheader="--noheader"
        done
    fi
done    

